{"version":3,"sources":["Support/Paths.js","Components/NavBar.js","Support/RequestLog.js","Support/Request.js","Repositories/MovieRepository.js","Components/MovieCard.js","Components/MovieGrid.js","Pages/Home.js","Pages/Movie.js","Pages/Search.js","Pages/Log.js","App.js","serviceWorker.js","index.js"],"names":["PATH_LOGS","concat","PATH_SEARCH","PATH_MOVIE","makeMovieUrl","movieId","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","input","React","createRef","query","URLSearchParams","location","search","get","current","value","decodeURI","path","e","preventDefault","pathname","history","push","encodeURI","react_default","a","createElement","className","href","onClick","onGoToPath","bind","onSubmit","type","ref","placeholder","Component","withRouter","storage","window","localStorage","KEY","instance","duration","endpoint","logs","formattedLogs","JSON","stringify","setItem","data","getItem","parse","removeItem","axios","create","baseURL","process","interceptors","request","use","config","metadata","startTime","Date","error","Promise","reject","response","endTime","url","replace","RequestLog","add","page","Request","status","payload","console","_context","t0","_context2","_context3","MovieCard","movie","image","react_router_dom","to","id","src","alt","title","MovieGrid","i","MovieCard_MovieCard","key","movies","length","map","renderMovie","Home","state","loading","total","canLoad","loadMovies","setState","MovieRepository","listPopular","result","items","Array","prototype","apply","_this$state","disabled","MovieGrid_MovieGrid","renderLoadMoreButton","getMovieIDFromRouteParams","params","Movie","match","loadMovie","genres","isArray","genre","renderLoading","renderImage","target","rel","link","renderGenres","description","renderNotFound","getQueryFromLocation","Search","loaded","_this$state2","renderTitle","Log","loadLogs","clear","log","onClear","renderLogs","App","Components_NavBar","react_router","exact","component","Boolean","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3410a4ca.chunk.js","sourcesContent":["const isProduction = process.env.NODE_ENV === 'production';\nconst prefix = '/' + (isProduction && false ? 'movie-list/' : '');\n\nexport const PATH_HOME = prefix;\nexport const PATH_LOGS = `${prefix}logs`;\nexport const PATH_SEARCH = `${prefix}search`;\nexport const PATH_MOVIE = `${prefix}movie/:id`;\n\nexport const makeSearchUrl = (query) => encodeURI(`${prefix}search?q=${query}`);\nexport const makeMovieUrl = (movieId) => `${prefix}movie/${movieId}`;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PATH_HOME, PATH_LOGS, makeSearchUrl } from '../Support/Paths';\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.input = React.createRef();\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams(this.props.location.search);\n        const query = params.get('q');\n\n        if (!query) {\n            return;\n        }\n\n        this.input.current.value = decodeURI(query);\n    }\n\n    onGoToPath(path, e) {\n        e.preventDefault();\n\n        if (path && this.props.location.pathname !== path) {\n            this.input.current.value = \"\";\n            this.props.history.push(path);\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.history.push(makeSearchUrl(this.input.current.value));\n    }\n\n    render() {\n        return (\n            <nav className=\"w-full fixed top-0 left-0 p-6 flex items-center bg-black text-white\">\n                <div>\n                    <a href=\"/\" onClick={this.onGoToPath.bind(this, PATH_HOME)}>Movie List</a>\n                </div>\n                <form className=\"pl-6\" onSubmit={this.onSubmit.bind(this)}>\n                    <input type=\"text\"\n                            ref={this.input}\n                            className=\"shadow appearance-none border rounded-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            placeholder=\"Search\" />\n                </form>\n                <div className=\"hidden md:block pl-6 flex-1 text-right\">\n                    <div className=\"text-sm text-gray-400\">\n                        <a href=\"/\" onClick={this.onGoToPath.bind(this, PATH_LOGS)}>\n                            Requests Log\n                        </a>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(NavBar);\n","const storage = window.localStorage;\nconst KEY = 'request_log';\n\nclass RequestLog {\n    add(duration, endpoint) {\n        const logs = this.get();\n        logs.push({ duration, endpoint });\n        const formattedLogs = JSON.stringify(logs);\n        storage.setItem(KEY, formattedLogs);\n    }\n\n    get() {\n        const data = storage.getItem(KEY);\n\n        try {\n            return JSON.parse(data) || [];\n        } catch (e) {\n            return [];\n        }\n    }\n\n    clear() {\n        storage.removeItem(KEY);\n    }\n}\n\nconst instance = new RequestLog();\n\nexport default instance;\n","import axios from 'axios';\nimport RequestLog from './RequestLog';\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n});\n\ninstance.interceptors.request.use(\n    (config) => {\n        config.metadata = { startTime: new Date() };\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\ninstance.interceptors.response.use(\n    (response) => {\n        response.config.metadata.endTime = new Date();\n        const duration = response.config.metadata.endTime - response.config.metadata.startTime;\n        const endpoint = response.config.url.replace(response.config.baseURL, '');\n        RequestLog.add(duration, endpoint);\n        return response;\n    },\n    (error) => Promise.reject(error)\n);\n\nexport default instance;\n","import Request from '../Support/Request';\n\nclass MovieRepository {\n    async listPopular(page = 1) {\n        try {\n            const response = await Request.get(`/?page=${page}`);\n            \n            if (!response.data.status) {\n                return null;\n            }\n\n            return response.data.payload;\n        } catch (e) {\n            console.error('Error listing movies', e);\n        }\n        \n        return null;\n    }\n\n    async search(query, page = 1) {\n        try {\n            const response = await Request.get(`/search?q=${query}&page=${page}`);\n            \n            if (!response.data.status) {\n                return null;\n            }\n\n            return response.data.payload;\n        } catch (e) {\n            console.error('Error listing movies', e);\n        }\n        \n        return null;\n    }\n\n    async get(movieId) {\n        try {\n            const response = await Request.get(`/get/${movieId}`);\n            \n            if (!response.data.status) {\n                return null;\n            }\n\n            return response.data.payload;\n        } catch (e) {\n            console.error('Error getting movies', e);\n        }\n        \n        return null;\n    }\n}\n\nconst instance = new MovieRepository();\n\nexport default instance;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeMovieUrl } from '../Support/Paths';\n\nexport default class MovieCard extends Component {\n    render() {\n        const { movie } = this.props;\n        let image = null;\n\n        if (movie.image) {\n            image = (\n                <div className=\"rounded-t overflow-hidden\">\n                    <Link to={makeMovieUrl(movie.id)}>\n                        <img src={movie.image} alt={movie.title} />\n                    </Link>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"flex w-1/2 sm:w-1/3 md:w-1/4 xl:w-1/5 px-3 mb-6\">\n                <div className=\"flex-1 flex flex-col border border-white rounded\">\n                    {image}\n                    <div className=\"p-4\">\n                        <Link to={makeMovieUrl(movie.id)}>\n                            {movie.title}\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MovieCard from './MovieCard';\n\nexport default class MovieGrid extends Component {\n    renderMovie(movie, i) {\n        return (\n            <MovieCard movie={movie} key={`${movie.id}-${i}`} />\n        );\n    }\n\n    render() {\n        const { movies } = this.props;\n\n        if (!movies) {\n            return null;\n        }\n\n        if (movies.length < 1) {\n            return null;\n        }\n\n        return (\n            <div className=\"flex flex-wrap -mx-3 mt-4\">\n                {movies.map(this.renderMovie.bind(this))}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MovieRepository from '../Repositories/MovieRepository';\nimport MovieGrid from '../Components/MovieGrid';\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            movies: [],\n            page: 0,\n            total: 0,\n            canLoad: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadMovies();\n    }\n\n    async loadMovies() {\n        this.setState({ loading: true });\n        const result = await MovieRepository.listPopular(this.state.page + 1);\n\n        if (!result) {\n            this.setState({ loading: false });\n            return;\n        }\n\n        const { page, total, items } = result;\n        let movies = [];\n        Array.prototype.push.apply(movies, this.state.movies);\n        Array.prototype.push.apply(movies, items);\n\n        this.setState({\n            page,\n            total,\n            movies,\n            loading: false,\n            canLoad: total > movies.length,\n        });\n    }\n\n    renderLoadMoreButton() {\n        const { loading, canLoad } = this.state;\n\n        if (!canLoad) {\n            return (\n                <span disabled={true} className=\"btn primary disabled\">\n                    No More Results\n                </span>\n            );\n        }\n\n        return (\n            <button type=\"button\"\n                    onClick={this.loadMovies.bind(this)}\n                    disabled={loading}\n                    className=\"btn primary\">\n                {loading ? 'Loading...' : 'Load More'}\n            </button>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"text-3xl font-semibold mb-2\">Popular Movies</h1>\n                <MovieGrid movies={this.state.movies} />\n                {this.renderLoadMoreButton()}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieRepository from '../Repositories/MovieRepository';\n\nconst getMovieIDFromRouteParams = (params) => {\n    if (!params.id) {\n        return null;\n    }\n\n    return params.id;\n};\n\nexport default class Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            movie: {},\n            movieId: getMovieIDFromRouteParams(props.match.params),\n        };\n    }\n\n    componentDidMount() {\n        this.loadMovie();\n    }\n\n    async loadMovie() {\n        this.setState({ loading: true });\n        const result = await MovieRepository.get(this.state.movieId);\n\n        if (!result) {\n            this.setState({ loading: false, movie: {} });\n            return;\n        }\n\n        this.setState({\n            loading: false,\n            movie: result,\n        });\n    }\n\n    renderLoading() {\n        return (\n            <div>\n                <h1 className=\"text-3xl font-semibold\">Loading</h1>\n            </div>\n        );\n    }\n\n    renderNotFound() {\n        return (\n            <div>\n                <h1 className=\"text-3xl font-semibold mb-4\">Movie not found</h1>\n                <Link className=\"btn primary\" to=\"/\">Back</Link>\n            </div>\n        );\n    }\n\n    renderImage(movie) {\n        if (!movie.image) {\n            return null;\n        }\n\n        return (\n            <div className=\"flex-1 rounded-lg overflow-hidden\">\n                <img src={movie.image} alt={movie.title} />\n            </div>\n        );\n    }\n\n    renderGenres(movie) {\n        if (!movie.genres) {\n            return null;\n        }\n\n        if (!Array.isArray(movie.genres)) {\n            return null;\n        }\n\n        return (\n            <p className=\"badges\">\n                {movie.genres.map(genre => (\n                    <span className=\"badge\" key={genre}>\n                        {genre}\n                    </span>\n                ))}\n            </p>\n        );\n    }\n\n    render() {\n        const { loading, movie } = this.state;\n\n        if (loading) {\n            return this.renderLoading();\n        }\n\n        if (!movie.id) {\n            return this.renderNotFound();\n        }\n\n        return (\n            <div className=\"flex flex-col md:flex-row mt-4\">\n                {this.renderImage(movie)}\n                <div className=\"flex-1 px-0 pt-4 md:px-4 md:pt-0\">\n                    <Link className=\"text-red-500 underline text-sm\" to=\"/\">Back</Link>\n                    <h1 className=\"text-3xl font-semibold leading-none mt-2\">{movie.title}</h1>\n                    <a target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={movie.link}\n                        className=\"text-sm underline\">Website</a>\n                    {this.renderGenres(movie)}\n                    <div className=\"mt-6\">\n                        {movie.description}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MovieRepository from '../Repositories/MovieRepository';\nimport MovieGrid from '../Components/MovieGrid';\n\nconst getQueryFromLocation = (location) => {\n    const params = new URLSearchParams(location.search);\n    return params.get('q');\n};\n\nexport default class Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            movies: [],\n            page: 0,\n            total: 0,\n            loaded: false,\n            query: getQueryFromLocation(props.location),\n            canLoad: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadMovies();\n    }\n\n    async loadMovies() {\n        this.setState({ loading: true });\n        const result = await MovieRepository.search(this.state.query, this.state.page + 1);\n\n        if (!result) {\n            this.setState({ loading: false, loaded: true });\n            return;\n        }\n\n        const { page, total, items } = result;\n        let movies = [];\n        Array.prototype.push.apply(movies, this.state.movies);\n        Array.prototype.push.apply(movies, items);\n        \n        this.setState({\n            page,\n            total,\n            movies,\n            loading: false,\n            loaded: true,\n            canLoad: total > movies.length,\n        });\n    }\n\n    renderTitle() {\n        const { loaded, total, query } = this.state;\n\n        if (!loaded) {\n            return (\n                <h1 className=\"text-3xl font-semibold mb-2\">\n                    Loading\n                </h1>\n            );\n        }\n\n        return (\n            <h1 className=\"text-3xl font-semibold mb-2\">\n                {total} movies found with <em>\"{decodeURI(query)}\"</em>\n            </h1>\n        );\n    }\n\n    renderLoadMoreButton() {\n        const { loaded, loading, canLoad } = this.state;\n\n        if (!loaded) {\n            return null;\n        }\n\n        if (!canLoad) {\n            return (\n                <span disabled={true} className=\"btn primary disabled\">\n                    No More Results\n                </span>\n            );\n        }\n\n        return (\n            <button type=\"button\"\n                    onClick={this.loadMovies.bind(this)}\n                    disabled={loading}\n                    className=\"btn primary\">\n                {loading ? 'Loading...' : 'Load More'}\n            </button>\n        );\n    }\n\n    render() {\n        const { movies } = this.state;\n        return (\n            <div>\n                {this.renderTitle()}\n                {this.renderLoadMoreButton()}\n                <MovieGrid movies={movies} />\n                {this.renderLoadMoreButton()}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport RequestLog from '../Support/RequestLog';\n\nexport default class Log extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logs: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadLogs();\n    }\n\n    async loadLogs() {\n        const result = await RequestLog.get();\n\n        if (!result) {\n            return;\n        }\n\n        this.setState({\n            logs: result,\n        });\n    }\n\n    async onClear() {\n        await RequestLog.clear();\n        await this.loadLogs();\n    }\n\n    renderLogs() {\n        const { logs } = this.state;\n\n        if (!logs) {\n            return null;\n        }\n\n        const items = logs.map((log, i) => (\n            <tr className=\"border-b text-sm\" key={i}>\n                <td className=\"px-4 py-1\">{`${log.duration / 1000}s`}</td>\n                <td className=\"px-4 py-1\">{log.endpoint}</td>\n            </tr>\n        ));\n\n        return (\n            <tbody>\n                {items}\n            </tbody>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"text-3xl font-semibold mb-2\">\n                    Requests Log\n                    <button type=\"button\"\n                        onClick={this.onClear.bind(this)}\n                        className=\"btn primary btn-xs ml-2 align-text-bottom\">\n                        Clear\n                    </button>\n                </h1>\n                <table className=\"border-collapse w-full text-left\">\n                    <thead>\n                        <tr className=\"border-b border-t\">\n                            <th className=\"p-4\">Duration</th>\n                            <th className=\"p-4\">Endpoint</th>\n                        </tr>\n                    </thead>\n                    {this.renderLogs()}\n                </table>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport NavBar from './Components/NavBar';\nimport Home from './Pages/Home';\nimport Movie from './Pages/Movie';\nimport Search from './Pages/Search';\nimport Log from './Pages/Log';\nimport { PATH_HOME, PATH_LOGS, PATH_MOVIE, PATH_SEARCH } from './Support/Paths';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div className=\"h-full min-h-screen bg-gray-800 text-white p-6 pt-24\">\n                <Router>\n                    <NavBar />\n                    <Route path={PATH_HOME} exact component={Home} />\n                    <Route path={PATH_SEARCH} component={Search} />\n                    <Route path={PATH_MOVIE} component={Movie} />\n                    <Route path={PATH_LOGS} component={Log} />\n                </Router>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}