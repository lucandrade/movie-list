{"version":3,"sources":["Support/Paths.js","Components/NavBar.js","Support/Storage.js","Support/RequestLog.js","Support/Request.js","Repositories/MovieRepository.js","Components/MovieCard.js","Components/MovieGrid.js","Pages/Home.js","Pages/Movie.js","Pages/NotFound.js","Pages/Search.js","Pages/Log.js","App.js","serviceWorker.js","index.js"],"names":["PATH_LOGS","concat","PATH_SEARCH","PATH_MOVIE","makeMovieUrl","movieId","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","input","React","createRef","state","opened","query","URLSearchParams","location","search","get","current","value","decodeURI","path","e","preventDefault","setState","pathname","history","push","encodeURI","react_default","a","createElement","className","href","onClick","onGoToPath","bind","onSubmit","type","ref","placeholder","onToggleMenu","Component","withRouter","storage","window","localStorage","instance","client","key","data","JSON","stringify","setItem","getItem","parse","removeItem","KEY","duration","endpoint","platform","logs","Storage","set","remove","getPlatform","axios","create","baseURL","process","interceptors","request","use","config","metadata","startTime","Date","error","Promise","reject","response","endTime","url","replace","RequestLog","add","isPhp","isJava","page","Request","status","payload","console","_context","t0","_context2","_context3","MovieCard","movie","image","react_router_dom","to","id","src","alt","title","MovieGrid","i","MovieCard_MovieCard","movies","length","map","renderMovie","Home","loading","total","canLoad","loadMovies","MovieRepository","listPopular","result","items","Array","prototype","apply","_this$state","disabled","MovieGrid_MovieGrid","renderLoadMoreButton","getMovieIDFromRouteParams","params","Movie","match","loadMovie","genres","isArray","genre","renderLoading","renderImage","target","rel","link","renderGenres","description","renderNotFound","NotFound","getQueryFromLocation","Search","loaded","_this$state2","renderTitle","Log","loadLogs","clear","defaults","log","onSetToPhp","onSetToJava","onClear","renderLogs","App","Components_NavBar","react_router","exact","component","Boolean","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af6129e8.chunk.js","sourcesContent":["const prefix = '/';\n\nexport const PATH_HOME = prefix;\nexport const PATH_LOGS = `${prefix}logs`;\nexport const PATH_SEARCH = `${prefix}search`;\nexport const PATH_MOVIE = `${prefix}movie/:id`;\n\nexport const makeSearchUrl = (query) => encodeURI(`${prefix}search?q=${query}`);\nexport const makeMovieUrl = (movieId) => `${prefix}movie/${movieId}`;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PATH_HOME, PATH_LOGS, makeSearchUrl } from '../Support/Paths';\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.input = React.createRef();\n        this.state = {\n            opened: false,\n        };\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams(this.props.location.search);\n        const query = params.get('q');\n\n        if (!query) {\n            return;\n        }\n\n        this.input.current.value = decodeURI(query);\n    }\n\n    onGoToPath(path, e) {\n        e.preventDefault();\n\n        this.setState({\n            opened: false,\n        });\n\n        if (path && this.props.location.pathname !== path) {\n            this.input.current.value = \"\";\n            this.props.history.push(path);\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.history.push(makeSearchUrl(this.input.current.value));\n    }\n\n    onToggleMenu() {\n        this.setState({\n            opened: !this.state.opened,\n        });\n    }\n\n    render() {\n        return (\n            <nav className=\"w-full fixed top-0 left-0 bg-black text-white\">\n                <div className=\"block p-6 flex items-center\">\n                    <div>\n                        <a href=\"/\" onClick={this.onGoToPath.bind(this, PATH_HOME)}>Movie List</a>\n                    </div>\n                    <form className=\"pl-6\" onSubmit={this.onSubmit.bind(this)}>\n                        <input type=\"text\"\n                                ref={this.input}\n                                className=\"shadow appearance-none border rounded-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                placeholder=\"Search\" />\n                    </form>\n                    <div className=\"hidden md:block pl-6 flex-1 text-right\">\n                        <div className=\"text-gray-400\">\n                            <a href=\"/\" onClick={this.onGoToPath.bind(this, PATH_LOGS)}>\n                                Requests Log\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"block md:hidden pl-6 flex-1 text-right text-xl\" onClick={this.onToggleMenu.bind(this)}>\n                        &#9776;\n                    </div>\n                </div>\n                <div className={`bg-gray-100 px-6 py-2 text-gray-900 collapsible ${!this.state.opened ? 'collapsed' : ''}`}>\n                    <a href=\"/\" onClick={this.onGoToPath.bind(this, PATH_LOGS)}>\n                        Requests Log\n                    </a>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(NavBar);\n","const storage = window.localStorage;\n\nclass Storage {\n    client = storage;\n\n    set(key, value) {\n        let data = value;\n\n        if (typeof data === 'object') {\n            data = JSON.stringify(data);\n        }\n\n        this.client.setItem(key, data);\n    }\n\n    get(key) {\n        const data = this.client.getItem(key);\n\n        try {\n            return JSON.parse(data);\n        } catch (e) {\n            return data;\n        }\n    }\n\n    remove(key) {\n        this.client.removeItem(key);\n    }\n}\n\nconst instance = new Storage();\n\nexport default instance;\n","import Storage from './Storage';\n\nconst KEY = 'request_log';\n\nclass RequestLog {\n    add(duration, endpoint, platform) {\n        const logs = this.get();\n        logs.push({ duration, endpoint, platform });\n        Storage.set(KEY, logs);\n    }\n\n    get() {\n        return Storage.get(KEY) || [];\n    }\n\n    clear() {\n        Storage.remove(KEY);\n    }\n}\n\nconst instance = new RequestLog();\n\nexport default instance;\n","import axios from 'axios';\nimport Storage from './Storage';\nimport RequestLog from './RequestLog';\n\nconst PHP_KEY = 'php';\nconst JAVA_KEY = 'java';\nconst API_PLATFORM_KEY = 'api_platform';\nconst PHP_API_URL = process.env.REACT_APP_API_URL_PHP;\nconst JAVA_API_URL = process.env.REACT_APP_API_URL_JAVA;\n\nconst getPlatform = () => {\n    const platform = Storage.get(API_PLATFORM_KEY);\n\n    if (!platform) {\n        return PHP_KEY;\n    }\n\n    return platform;\n};\n\nconst getApiUrl = () => {\n    if (getPlatform() === PHP_KEY) {\n        return PHP_API_URL;\n    }\n\n    return JAVA_API_URL;\n};\n\nconst instance = axios.create({\n    baseURL: getApiUrl(),\n});\n\ninstance.interceptors.request.use(\n    (config) => {\n        config.metadata = { startTime: new Date() };\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\ninstance.interceptors.response.use(\n    (response) => {\n        response.config.metadata.endTime = new Date();\n        const duration = response.config.metadata.endTime - response.config.metadata.startTime;\n        const endpoint = response.config.url.replace(response.config.baseURL, '');\n        RequestLog.add(duration, endpoint, getPlatform());\n        return response;\n    },\n    (error) => Promise.reject(error)\n);\n\nexport const setToPhp = () => {\n    Storage.set(API_PLATFORM_KEY, PHP_KEY);\n    instance.defaults.baseURL = PHP_API_URL;\n};\n\nexport const setToJava = () => {\n    Storage.set(API_PLATFORM_KEY, JAVA_KEY);\n    instance.defaults.baseURL = JAVA_API_URL;\n};\n\nexport const isPhp = () => getPlatform() === PHP_KEY;\n\nexport const isJava = () => getPlatform() === JAVA_KEY;\n\nexport default instance;\n","import Request from '../Support/Request';\n\nclass MovieRepository {\n    async listPopular(page = 1) {\n        try {\n            const response = await Request.get(`/?page=${page}`);\n            \n            if (!response.data.status) {\n                return null;\n            }\n\n            return response.data.payload;\n        } catch (e) {\n            console.error('Error listing movies', e);\n        }\n        \n        return null;\n    }\n\n    async search(query, page = 1) {\n        try {\n            const response = await Request.get(`/search?q=${query}&page=${page}`);\n            \n            if (!response.data.status) {\n                return null;\n            }\n\n            return response.data.payload;\n        } catch (e) {\n            console.error('Error listing movies', e);\n        }\n        \n        return null;\n    }\n\n    async get(movieId) {\n        try {\n            const response = await Request.get(`/get/${movieId}`);\n            \n            if (!response.data.status) {\n                return null;\n            }\n\n            return response.data.payload;\n        } catch (e) {\n            console.error('Error getting movies', e);\n        }\n        \n        return null;\n    }\n}\n\nconst instance = new MovieRepository();\n\nexport default instance;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeMovieUrl } from '../Support/Paths';\n\nexport default class MovieCard extends Component {\n    render() {\n        const { movie } = this.props;\n        let image = null;\n\n        if (movie.image) {\n            image = (\n                <div className=\"rounded-t overflow-hidden\">\n                    <Link to={makeMovieUrl(movie.id)}>\n                        <img src={movie.image} alt={movie.title} />\n                    </Link>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"flex w-1/2 sm:w-1/3 md:w-1/4 xl:w-1/5 px-3 mb-6\">\n                <div className=\"flex-1 flex flex-col border border-white rounded\">\n                    {image}\n                    <div className=\"p-4\">\n                        <Link to={makeMovieUrl(movie.id)}>\n                            {movie.title}\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MovieCard from './MovieCard';\n\nexport default class MovieGrid extends Component {\n    renderMovie(movie, i) {\n        return (\n            <MovieCard movie={movie} key={`${movie.id}-${i}`} />\n        );\n    }\n\n    render() {\n        const { movies } = this.props;\n\n        if (!movies) {\n            return null;\n        }\n\n        if (movies.length < 1) {\n            return null;\n        }\n\n        return (\n            <div className=\"flex flex-wrap -mx-3 mt-4\">\n                {movies.map(this.renderMovie.bind(this))}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MovieRepository from '../Repositories/MovieRepository';\nimport MovieGrid from '../Components/MovieGrid';\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            movies: [],\n            page: 0,\n            total: 0,\n            canLoad: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadMovies();\n    }\n\n    async loadMovies() {\n        this.setState({ loading: true });\n        const result = await MovieRepository.listPopular(this.state.page + 1);\n\n        if (!result) {\n            this.setState({ loading: false });\n            return;\n        }\n\n        const { page, total, items } = result;\n        let movies = [];\n        Array.prototype.push.apply(movies, this.state.movies);\n        Array.prototype.push.apply(movies, items);\n\n        this.setState({\n            page,\n            total,\n            movies,\n            loading: false,\n            canLoad: total > movies.length,\n        });\n    }\n\n    renderLoadMoreButton() {\n        const { loading, canLoad } = this.state;\n\n        if (!canLoad) {\n            return (\n                <span disabled={true} className=\"btn primary disabled\">\n                    No More Results\n                </span>\n            );\n        }\n\n        return (\n            <button type=\"button\"\n                    onClick={this.loadMovies.bind(this)}\n                    disabled={loading}\n                    className=\"btn primary\">\n                {loading ? 'Loading...' : 'Load More'}\n            </button>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"text-3xl font-semibold mb-2\">Popular Movies</h1>\n                <MovieGrid movies={this.state.movies} />\n                {this.renderLoadMoreButton()}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieRepository from '../Repositories/MovieRepository';\n\nconst getMovieIDFromRouteParams = (params) => {\n    if (!params.id) {\n        return null;\n    }\n\n    return params.id;\n};\n\nexport default class Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            movie: {},\n            movieId: getMovieIDFromRouteParams(props.match.params),\n        };\n    }\n\n    componentDidMount() {\n        this.loadMovie();\n    }\n\n    async loadMovie() {\n        this.setState({ loading: true });\n        const result = await MovieRepository.get(this.state.movieId);\n\n        if (!result) {\n            this.setState({ loading: false, movie: {} });\n            return;\n        }\n\n        this.setState({\n            loading: false,\n            movie: result,\n        });\n    }\n\n    renderLoading() {\n        return (\n            <div>\n                <h1 className=\"text-3xl font-semibold\">Loading</h1>\n            </div>\n        );\n    }\n\n    renderNotFound() {\n        return (\n            <div>\n                <h1 className=\"text-3xl font-semibold mb-4\">Movie not found</h1>\n                <Link className=\"btn primary\" to=\"/\">Back</Link>\n            </div>\n        );\n    }\n\n    renderImage(movie) {\n        if (!movie.image) {\n            return null;\n        }\n\n        return (\n            <div className=\"flex-1 rounded-lg overflow-hidden\">\n                <img src={movie.image} alt={movie.title} />\n            </div>\n        );\n    }\n\n    renderGenres(movie) {\n        if (!movie.genres) {\n            return null;\n        }\n\n        if (!Array.isArray(movie.genres)) {\n            return null;\n        }\n\n        return (\n            <p className=\"badges\">\n                {movie.genres.map(genre => (\n                    <span className=\"badge\" key={genre}>\n                        {genre}\n                    </span>\n                ))}\n            </p>\n        );\n    }\n\n    render() {\n        const { loading, movie } = this.state;\n\n        if (loading) {\n            return this.renderLoading();\n        }\n\n        if (!movie.id) {\n            return this.renderNotFound();\n        }\n\n        return (\n            <div className=\"flex flex-col md:flex-row mt-4\">\n                {this.renderImage(movie)}\n                <div className=\"flex-1 px-0 pt-4 md:px-4 md:pt-0\">\n                    <Link className=\"text-red-500 underline text-sm\" to=\"/\">Back</Link>\n                    <h1 className=\"text-3xl font-semibold leading-none mt-2\">{movie.title}</h1>\n                    <a target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={movie.link}\n                        className=\"text-sm underline\">Website</a>\n                    {this.renderGenres(movie)}\n                    <div className=\"mt-6\">\n                        {movie.description}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PATH_HOME } from '../Support/Paths';\n\nexport default class NotFound extends Component {\n    render() {\n        return (\n            <div>\n                <h1 className=\"text-3xl font-semibold mb-2\">\n                    Page Not Found\n                </h1>\n                <Link className=\"btn primary\" to={PATH_HOME}>Back</Link>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MovieRepository from '../Repositories/MovieRepository';\nimport MovieGrid from '../Components/MovieGrid';\n\nconst getQueryFromLocation = (location) => {\n    const params = new URLSearchParams(location.search);\n    return params.get('q');\n};\n\nexport default class Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            movies: [],\n            page: 0,\n            total: 0,\n            loaded: false,\n            query: getQueryFromLocation(props.location),\n            canLoad: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadMovies();\n    }\n\n    async loadMovies() {\n        this.setState({ loading: true });\n        const result = await MovieRepository.search(this.state.query, this.state.page + 1);\n\n        if (!result) {\n            this.setState({ loading: false, loaded: true });\n            return;\n        }\n\n        const { page, total, items } = result;\n        let movies = [];\n        Array.prototype.push.apply(movies, this.state.movies);\n        Array.prototype.push.apply(movies, items);\n        \n        this.setState({\n            page,\n            total,\n            movies,\n            loading: false,\n            loaded: true,\n            canLoad: total > movies.length,\n        });\n    }\n\n    renderTitle() {\n        const { loaded, total, query } = this.state;\n\n        if (!loaded) {\n            return (\n                <h1 className=\"text-3xl font-semibold mb-2\">\n                    Loading\n                </h1>\n            );\n        }\n\n        return (\n            <h1 className=\"text-3xl font-semibold mb-2\">\n                {total} movies found with <em>\"{decodeURI(query)}\"</em>\n            </h1>\n        );\n    }\n\n    renderLoadMoreButton() {\n        const { loaded, loading, canLoad } = this.state;\n\n        if (!loaded) {\n            return null;\n        }\n\n        if (!canLoad) {\n            return (\n                <span disabled={true} className=\"btn primary disabled\">\n                    No More Results\n                </span>\n            );\n        }\n\n        return (\n            <button type=\"button\"\n                    onClick={this.loadMovies.bind(this)}\n                    disabled={loading}\n                    className=\"btn primary\">\n                {loading ? 'Loading...' : 'Load More'}\n            </button>\n        );\n    }\n\n    render() {\n        const { movies } = this.state;\n        return (\n            <div>\n                {this.renderTitle()}\n                {this.renderLoadMoreButton()}\n                <MovieGrid movies={movies} />\n                {this.renderLoadMoreButton()}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { isPhp, isJava, setToPhp, setToJava } from '../Support/Request';\nimport RequestLog from '../Support/RequestLog';\n\nexport default class Log extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logs: [],\n            isPhp: isPhp(),\n            isJava: isJava(),\n        };\n    }\n\n    componentDidMount() {\n        this.loadLogs();\n    }\n\n    async loadLogs() {\n        const result = await RequestLog.get();\n\n        if (!result) {\n            return;\n        }\n\n        this.setState({\n            logs: result,\n        });\n    }\n\n    async onClear() {\n        await RequestLog.clear();\n        await this.loadLogs();\n    }\n\n    onSetToPhp() {\n        if (this.state.isPhp) {\n            return;\n        }\n\n        setToPhp();\n        this.setState({\n            isPhp: isPhp(),\n            isJava: isJava(),\n        });\n    }\n\n    onSetToJava() {\n        if (this.state.isJava) {\n            return;\n        }\n\n        setToJava();\n        this.setState({\n            isPhp: isPhp(),\n            isJava: isJava(),\n        });\n    }\n\n    renderLogs() {\n        const { logs } = this.state;\n\n        if (!logs) {\n            return null;\n        }\n\n        const items = logs.map((log, i) => (\n            <tr className=\"border-b text-sm\" key={i}>\n                <td className=\"px-4 py-1\">{`${log.duration / 1000}s`}</td>\n                <td className=\"px-4 py-1\">{log.endpoint}</td>\n                <td className=\"px-4 py-1\">{log.platform}</td>\n            </tr>\n        ));\n\n        return (\n            <tbody>\n                {items}\n            </tbody>\n        );\n    }\n\n    render() {\n        const { isPhp, isJava } = this.state;\n\n        return (\n            <div className=\"mt-4\">\n                <div className=\"flex flex-col md:flex-row mb-4 items-baseline md:items-center\">\n                    <h1 className=\"text-3xl font-semibold leading-none\">\n                        Requests Log\n                    </h1>\n                    <div className=\"flex-1 flex justify-start md:justify-end mt-4 md:mt-0\">\n                        <div className=\"btn-group\">\n                            <button className={`btn btn-xs primary ${isPhp ? 'opacity-50' : ''}`} onClick={this.onSetToPhp.bind(this)}>\n                                PHP\n                            </button>\n                            <button className={`btn btn-xs primary ${isJava ? 'opacity-50' : ''}`} onClick={this.onSetToJava.bind(this)}>\n                                Java\n                            </button>\n                        </div>\n                        <div className=\"ml-2\">\n                            <button type=\"button\"\n                                onClick={this.onClear.bind(this)}\n                                className=\"btn btn-xs danger\">\n                                Clear Logs\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <table className=\"border-collapse w-full text-left\">\n                    <thead>\n                        <tr className=\"border-b\">\n                            <th className=\"p-4\">Duration</th>\n                            <th className=\"p-4\">Endpoint</th>\n                            <th className=\"p-4\">Platform</th>\n                        </tr>\n                    </thead>\n                    {this.renderLogs()}\n                </table>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from './Components/NavBar';\nimport Home from './Pages/Home';\nimport Movie from './Pages/Movie';\nimport NotFound from './Pages/NotFound';\nimport Search from './Pages/Search';\nimport Log from './Pages/Log';\nimport { PATH_HOME, PATH_LOGS, PATH_MOVIE, PATH_SEARCH } from './Support/Paths';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div className=\"h-full min-h-screen bg-gray-800 text-white p-6 pt-24\">\n                <Router>\n                    <NavBar />\n                    <Switch>\n                        <Route path={PATH_HOME} exact component={Home} />\n                        <Route path={PATH_SEARCH} component={Search} />\n                        <Route path={PATH_MOVIE} component={Movie} />\n                        <Route path={PATH_LOGS} component={Log} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}